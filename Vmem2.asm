;---------------------I.ЗАГОЛОВОК ПРОГРАМИ------------------------------------

IDEAL   ; Директива - тип Асемблера tasm
MODEL small ; Директива - тип моделі пам'яті
STACK 256   ; Директива - розмір стеку в байтах

;--------------------II.МАКРОСИ------------------------------------
MACRO M_Init ; Початок макросу
mov ax,@data ; ax <- @data 
mov ds,ax ; ds <- ax
mov es,ax ; es <- ax
ENDM M_Init ; Кінець макросу

;--------------------III.ПОЧАТОК СЕГМЕНТУ ДАНИХ
DATASEG

exCode db 0

; Одна лінія прямокутника
rect_line db 4Ch,21h,61h,21h,62h,21h,32h,21h,20h,21h
db 4Ch,21h,61h,21h,62h,21h,32h,21h,20h,21h
db 4Ch,21h,61h,21h,62h,21h,32h,21h,20h,21h
db 4Ch,21h,61h,21h,62h,21h,32h,21h,20h,21h


	rect_line_length=$-rect_line; функція для визначення довжини строки

;----------------------VI. ПОЧАТОК СЕГМЕНТУ КОДУ-----------------	
		CODESEG	

	Start:
		M_Init;використовуємо макрос
		
;-------------------------------------------------------------
	mov dx,400 ;Початок виводу прямокутника, координата верхнього лівого кута 160*y+2*x
	
	mov cx,10 ;Лічильник ітерацій циклу
loopStart:;Мітка початку циклу
		;Регістр cx використовужться в команді movsb з префіксом rep,
		;тому ми спочатку зберігаємо його значення в іншому регістрі, напирклад bx
	
	mov bx,cx;Зберігаємо значення лічильника в іншому регістрі
	mov ax,0B800h;1.Сегментна адреса відеопамяті
	mov es,ax;2.До ES
	
	;Налаштування SI,DI і CX для movsb
	
	mov di,dx;di <- Початок виводу на екран
	mov si,offset rect_line;записуємо в si наший рядок
	mov cx,rect_line_length;Число байтів на пересилання
	cld;DF - вперед
	rep movsb;Пересилання
	mov cx,bx;команда rep movsb виконана і вже регістр-лічильник cx, який використовується
			;для циклу выльний, отже повертаємо його значення з регістру bx назад
	
	add dx,160;Зімення для наступної дінії
LOOP loopStart;використовуємо команду LOOP, яка повертатиме блок коду, поки значення лічильника не буде 0

Exit:
	mov ah,04Ch
	mov al,[exCode];отримання коду виходу
	int 21h;виклик функції DOS 4ch
;----------------------------------------------------------------------
END Start
;----------------------------------------------------------------------